<?xml version="1.0" encoding="UTF-8"?>
<custombutton xmlns:cb="http://xsms.nm.ru/custombuttons/"
              xmlns:html="http://www.w3.org/1999/xhtml">
  <html:head>
    <html:title><![CDATA[Update Button test]]></html:title>
    <html:link rel="shortcut icon" href=""/>
    <html:style type="text/css"><![CDATA[body { font-size: medium; margin: 0; }
body, code:before, help:before, initcode:before {
  font-family: "Verdana", sans-serif;
}
#wrapper { position: fixed; top: 1em; right: 1em; text-align: center; }
p { font-size: small; text-align: center; }
#button {
  background-color: rgb(85, 168, 2);
  background-image: linear-gradient(to bottom, rgb(147, 200, 94), rgb(85, 168, 2));
  background-image: -moz-linear-gradient(top, rgb(147, 200, 94), rgb(85, 168, 2));
  background-image: -o-linear-gradient(top, rgb(147, 200, 94), rgb(85, 168, 2));
  background-image: -webkit-linear-gradient(top, rgb(147, 200, 94), rgb(85, 168, 2));
  border: 1px solid rgb(58, 116, 4);
  border-radius: .5em;
  -moz-border-radius: .5em;
  -webkit-border-radius: .5em;
  padding: 0;
  margin-bottom: 1em;
  box-shadow: 1px 2px 3px rgba(0, 0, 0, .25);
  -moz-box-shadow: 1px 2px 3px rgba(0, 0, 0, .25);
  -o-box-shadow: 1px 2px 3px rgba(0, 0, 0, .25);
  -webkit-box-shadow: 1px 2px 3px rgba(0, 0, 0, .25);
}
#button a {
  color: #000;
  text-shadow: -1pt -1px 0pt rgba(255, 255, 255, .5);
  padding: 1em;
  text-decoration: none;
}
#button a, code, code:before, initcode, initcode:before, help, help:before {
  display: block;
}
#credits { position: fixed; bottom: 1em; right: 1em; font-size: small; }
custombutton { background-color: rgb(171, 171, 171); margin: 1em; }
date, image, mode, accelkey { display: none; }
name { font-weight: bold; font-size: x-large; }
code:before, help:before, initcode:before {
  font-weight: bold;
  font-size: large;
  margin: 0 0 1em;
  padding: .5em;
}
code:before { content: "CODE"; }
help:before { content: "Help"; }
initcode:before { content: "Initialization Code"; }
code, initcode, help {
  background-color: rgb(255, 255, 255);
  border: 1px inset rgb(170, 170, 170);
  font: medium monospace;
  margin: 1em 1em 2em 0;
  padding: 1em;
  text-align: left;
  width: 840px;
  white-space: pre-wrap;
  word-wrap: break-word;
}
.clear { clear: both; }
]]></html:style>
  </html:head>
  <html:body>
    <html:div id="wrapper">
      <html:div id="button">
        <html:a href="custombutton://%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Ccustombutton%20xmlns%3Acb%3D%22http%3A//xsms.nm.ru/custombuttons/%22%3E%0A%20%20%3Cname%3EUpdate%20Button%20test%3C/name%3E%0A%20%20%3Cimage%3E%3C%21%5BCDATA%5Bcustombuttons-stdicon-4%5D%5D%3E%3C/image%3E%0A%20%20%3Cmode%3E0%3C/mode%3E%0A%20%20%3Cinitcode%3E%3C%21%5BCDATA%5Bvar%20btnIcon%20%3D%20this.image%3B%0Avar%20bsyIcon%20%3D%20Application.name%20%3D%3D%20%22Firefox%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3F%20Application.version%20%3E%3D%20%224%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3F%20%22chrome%3A//browser/skin/tabbrowser/connecting.png%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3A%20%22chrome%3A//global/skin/icons/loading_16.png%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3A%20Application.name%20%3D%3D%20%22SeaMonkey%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3F%20%22chrome%3A//communicator/skin/icons/loading.gif%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3A%20%22chrome%3A//custombuttons/skin/button.png%22%3B%0A%0Afunction%20isValidCbURI%28aURL%29%20%7B%0A%20%20if%20%28%21aURL%29%20return%20false%3B%0A%20%20return%20/%5Ecustombutton%5C%3A%5C/%5C//.test%28aURL%29%3B%0A%7D%0A%0Afunction%20convertURItoDOM%28aURL%29%20%7B%0A%20%20if%20%28%21isValidCbURI%28aURL%29%29%20%7B%0A%20%20%20%20custombuttons.alertBox%28this.name%2C%20%22Not%20a%20Custom%20Buttons%20link%21%22%29%3B%0A%20%20%20%20return%3B%0A%20%20%7D%0A%20%20var%20string%20%3D%20unescape%28aURL.replace%28/%5Ecustombutton%5C%3A%5C/%5C//%2C%20%22%22%29.toString%28%29%29%3B%0A%20%20var%20parser%20%3D%20new%20DOMParser%28%29%3B%0A%20%20var%20dom%20%3D%20parser.parseFromString%28string%2C%20%22text/xml%22%29%3B%0A%20%20if%20%28dom.documentElement.nodeName%20%3D%3D%20%22parsererror%22%29%20%7B%0A%20%20%20%20return%20null%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20return%20dom.documentElement%3B%0A%20%20%7D%0A%7D%0A%0Afunction%20getParamValue%28aDocument%2C%20aNodeName%29%20%7B%0A%20%20var%20node%20%3D%20aDocument.getElementsByTagName%28aNodeName%29%5B0%5D%3B%0A%20%20if%20%28%21node%29%20return%20%22%22%3B%0A%20%20if%20%28%21node.firstChild%20%7C%7C%20%28node.firstChild%20%26%26%0A%20%20%20%20%20%20%28node.firstChild.nodeType%20%3D%3D%20node.TEXT_NODE%29%29%29%20%7B%0A%20%20%20%20return%20node.textContent%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20return%20node.firstChild.textContent%3B%0A%20%20%7D%0A%7D%0A%0Afunction%20getButtonParameters%28aButtonLink%2C%20aURL%29%20%7B%0A%20%20var%20dom%20%3D%20convertURItoDOM%28aURL%29%3B%0A%20%20var%20params%20%3D%20custombuttons.cbService.getButtonParameters%28aButtonLink%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.wrappedJSObject%3B%0A%20%20params.name%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22name%22%29%0A%20%20params.image%20%20%20%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22image%22%29%20%7C%7C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20getParamValue%28dom%2C%20%22stdicon%22%29%3B%0A%20%20params.code%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22code%22%29%0A%20%20params.initCode%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22initcode%22%29%0A%20%20params.help%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22help%22%29%0A%20%20params.accelkey%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22accelkey%22%29%0A%20%20params.mode%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20getParamValue%28dom%2C%20%22mode%22%29%0A%20%20params.wrappedJSObject%20%20%3D%20params%3B%0A%20%20return%20params%3B%0A%7D%0A%0Afunction%20makeButtonFromURI%28aButton%2C%20aURL%29%20%7B%0A%20%20var%20link%20%3D%20custombuttons.makeButtonLink%28%22update%22%2C%20aButton.id%29%3B%0A%20%20var%20params%20%3D%20getButtonParameters%28link%2C%20aURL%29%3B%0A%20%20custombuttons.cbService.installButton%28params%29%3B%0A%7D%0A%0Afunction%20resetAttributes%28aButton%29%20%7B%0A%20%20aButton.image%20%3D%20btnIcon%3B%0A%20%20aButton.tooltipText%20%3D%20aButton.name%3B%0A%20%20aButton.removeAttribute%28%22busy%22%29%3B%0A%7D%0A%0Athis.updateURL%20%3D%20%22http%3A//loucypher.googlecode.com/svn/%22%20+%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22custombuttons/xml/samples/Update%2520Button%2520test.xml%22%3B%0A%0Athis.checkForUpdate%20%3D%20function%28aCallback%29%20%7B%0A%20%20var%20url%20%3D%20this.updateURL%20+%20%22%3F%22%20+%20Date.now%28%29%3B%0A%20%20var%20req%20%3D%20new%20XMLHttpRequest%28%29%3B%0A%20%20req.open%28%22GET%22%2C%20url%2C%20true%29%3B%0A%20%20if%20%28this.hasAttribute%28%22busy%22%29%29%20%7B%0A%20%20%20%20resetAttributes%28this%29%3B%0A%20%20%20%20return%0A%20%20%7D%0A%20%20var%20Button%20%3D%20this%3B%0A%20%20req.onreadystatechange%20%3D%20function%20%28aEvent%29%20%7B%0A%20%20%20%20Button.image%20%3D%20bsyIcon%3B%0A%20%20%20%20Button.setAttribute%28%22busy%22%2C%20%22%22%29%3B%0A%20%20%20%20Button.tooltipText%20%3D%20%22Checking%20for%20update...%5CnClick%20to%20abort.%22%3B%0A%20%20%20%20if%20%28req.readyState%20%3D%3D%204%20%26%26%20req.status%20%3D%3D%20200%29%20%7B%0A%20%20%20%20%20%20resetAttributes%28Button%29%3B%0A%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20aCallback%28Button%2C%20req.responseXML%29%3B%0A%20%20%20%20%20%20%7D%20catch%28ex%29%20%7B%0A%20%20%20%20%20%20%20%20alert%28ex%29%3B%0A%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20req.send%28null%29%3B%0A%7D%0A%0Athis.getUpdate%20%3D%20function%28aButton%2C%20aDoc%29%20%7B%0A%20%20if%20%28aDoc.documentElement.localName%20%21%3D%20%22custombutton%22%29%20%7B%0A%20%20%20%20alert%28%22Not%20a%20valid%20Custom%20Buttons%20XML%20file%21%22%29%3B%0A%20%20%20%20return%3B%0A%20%20%7D%0A%20%20var%20button%20%3D%20aDoc.getElementById%28%22button%22%29%3B%0A%20%20var%20link%20%3D%20button.getElementsByTagNameNS%28%22http%3A//www.w3.org/1999/xhtml%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22a%22%29%5B0%5D%3B%0A%20%20if%20%28link.href%20%3D%3D%20aButton.URI%29%20%7B%0A%20%20%20%20alert%28%22No%20update%20found%21%22%29%3B%0A%20%20%20%20return%3B%0A%20%20%7D%20%0A%20%20var%20install%20%3D%20confirm%28%22New%20update%20found%21%5CnClick%20OK%20to%20update%20this%20button.%22%29%3B%0A%20%20if%20%28%21install%29%20return%3B%0A%20%20var%20btnLink%20%3D%20custombuttons.makeButtonLink%28%22update%22%2C%20aButton.id%29%3B%0A%20%20var%20params%20%3D%20getButtonParameters%28btnLink%2C%20link.href%29%3B%0A%20%20custombuttons.cbService.installButton%28params%29%3B%0A%20%20alert%28%22Button%20updated%21%22%29%3B%0A%7D%0A%0A%5D%5D%3E%3C/initcode%3E%0A%20%20%3Ccode%3E%3C%21%5BCDATA%5Bthis.checkForUpdate%28this.getUpdate%29%3B%5D%5D%3E%3C/code%3E%0A%20%20%3Caccelkey%3E%3C%21%5BCDATA%5B%5D%5D%3E%3C/accelkey%3E%0A%20%20%3Chelp%3E%3C%21%5BCDATA%5B%5D%5D%3E%3C/help%3E%0A%20%20%3Cattributes/%3E%0A%3C/custombutton%3E" rel="nofollow" title="Install Update Button test">
        <![CDATA[Install this button]]>
        </html:a>
      </html:div>
      <html:a href="https://addons.mozilla.org/addon/custom-buttons/?src=custom-buttons-xml">
        <![CDATA[What's this?]]>
      </html:a>
      <html:div id="credits">
        <html:a href="http://custombuttons.sourceforge.net/forum/viewtopic.php?t=78#p197">
          <![CDATA[Custom Buttons XML]]><html:br/><![CDATA[Exporter/Importer]]>
        </html:a>
      </html:div>
    </html:div>
  </html:body>
  <date id="date" value="20120329"/>
  <name>Update Button test</name>
  <image><![CDATA[custombuttons-stdicon-4]]></image>
  <mode>0</mode>
  <initcode><![CDATA[var btnIcon = this.image;
var bsyIcon = Application.name == "Firefox"
               ? Application.version >= "4"
                 ? "chrome://browser/skin/tabbrowser/connecting.png"
                 : "chrome://global/skin/icons/loading_16.png"
               : Application.name == "SeaMonkey"
                 ? "chrome://communicator/skin/icons/loading.gif"
                 : "chrome://custombuttons/skin/button.png";

function isValidCbURI(aURL) {
  if (!aURL) return false;
  return /^custombutton\:\/\//.test(aURL);
}

function convertURItoDOM(aURL) {
  if (!isValidCbURI(aURL)) {
    custombuttons.alertBox(this.name, "Not a Custom Buttons link!");
    return;
  }
  var string = unescape(aURL.replace(/^custombutton\:\/\//, "").toString());
  var parser = new DOMParser();
  var dom = parser.parseFromString(string, "text/xml");
  if (dom.documentElement.nodeName == "parsererror") {
    return null;
  } else {
    return dom.documentElement;
  }
}

function getParamValue(aDocument, aNodeName) {
  var node = aDocument.getElementsByTagName(aNodeName)[0];
  if (!node) return "";
  if (!node.firstChild || (node.firstChild &&
      (node.firstChild.nodeType == node.TEXT_NODE))) {
    return node.textContent;
  } else {
    return node.firstChild.textContent;
  }
}

function getButtonParameters(aButtonLink, aURL) {
  var dom = convertURItoDOM(aURL);
  var params = custombuttons.cbService.getButtonParameters(aButtonLink)
                                      .wrappedJSObject;
  params.name             = getParamValue(dom, "name")
  params.image            = getParamValue(dom, "image") ||
                            getParamValue(dom, "stdicon");
  params.code             = getParamValue(dom, "code")
  params.initCode         = getParamValue(dom, "initcode")
  params.help             = getParamValue(dom, "help")
  params.accelkey         = getParamValue(dom, "accelkey")
  params.mode             = getParamValue(dom, "mode")
  params.wrappedJSObject  = params;
  return params;
}

function makeButtonFromURI(aButton, aURL) {
  var link = custombuttons.makeButtonLink("update", aButton.id);
  var params = getButtonParameters(link, aURL);
  custombuttons.cbService.installButton(params);
}

function resetAttributes(aButton) {
  aButton.image = btnIcon;
  aButton.tooltipText = aButton.name;
  aButton.removeAttribute("busy");
}

this.updateURL = "http://loucypher.googlecode.com/svn/" +
                 "custombuttons/xml/samples/Update%20Button%20test.xml";

this.checkForUpdate = function(aCallback) {
  var url = this.updateURL + "?" + Date.now();
  var req = new XMLHttpRequest();
  req.open("GET", url, true);
  if (this.hasAttribute("busy")) {
    resetAttributes(this);
    return
  }
  var Button = this;
  req.onreadystatechange = function (aEvent) {
    Button.image = bsyIcon;
    Button.setAttribute("busy", "");
    Button.tooltipText = "Checking for update...\nClick to abort.";
    if (req.readyState == 4 && req.status == 200) {
      resetAttributes(Button);
      try {
        aCallback(Button, req.responseXML);
      } catch(ex) {
        alert(ex);
        return;
      }
    }
  }
  req.send(null);
}

this.getUpdate = function(aButton, aDoc) {
  if (aDoc.documentElement.localName != "custombutton") {
    alert("Not a valid Custom Buttons XML file!");
    return;
  }
  var button = aDoc.getElementById("button");
  var link = button.getElementsByTagNameNS("http://www.w3.org/1999/xhtml",
                                           "a")[0];
  if (link.href == aButton.URI) {
    alert("No update found!");
    return;
  } 
  var install = confirm("New update found!\nClick OK to update this button.");
  if (!install) return;
  var btnLink = custombuttons.makeButtonLink("update", aButton.id);
  var params = getButtonParameters(btnLink, link.href);
  custombuttons.cbService.installButton(params);
  alert("Button updated!");
}

]]></initcode>
  <code><![CDATA[this.checkForUpdate(this.getUpdate);]]></code>
  <accelkey><![CDATA[]]></accelkey>
  <help><![CDATA[]]></help>
  <attributes/>
</custombutton>